#!/bin/bash
# Check for direct modifications to /src files that should only be auto-generated
# This helps prevent the common mistake of editing files in /src instead of source-documents/

set -e

# Colors for output
RED='\033[0;31m'
YELLOW='\033[1;33m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo "üîç Checking for direct /src modifications..."

# Files that are auto-generated by scripts and may have legitimate uncommitted changes
# These are generated by sync-airtable-metadata.py and generate-relationships.py
SCRIPT_GENERATED_FILES=(
    "src/airtable-metadata.json"
    "src/relationships.json"
)

# Files that are auto-generated but should match their source-documents counterparts
# These should never have uncommitted changes unless source-documents changed
CONTENT_GENERATED_FILES=(
    "src/SUMMARY.md"
    "src/introduction.md"
)

# Directories where ALL files are auto-generated from source-documents/
GENERATED_DIRS=(
    "src/ordinances/"
    "src/resolutions/"
    "src/interpretations/"
    "src/other/"
    "src/agendas/"
    "src/minutes/"
    "src/transcripts/"
)

ISSUES_FOUND=false
WARNINGS_FOUND=false

# Check if running in git repository
if ! git rev-parse --git-dir > /dev/null 2>&1; then
    echo -e "${YELLOW}‚ö†Ô∏è  Not in a git repository, skipping check${NC}"
    exit 0
fi

# Function to check if changes look auto-generated
is_likely_autogenerated() {
    local file=$1

    # For JSON files, check if the changes follow expected patterns
    if [[ "$file" == *.json ]]; then
        # Check if the file exists and has valid JSON structure
        if [ -f "$file" ] && python3 -m json.tool "$file" > /dev/null 2>&1; then
            return 0  # Likely auto-generated
        fi
    fi

    return 1  # Not clearly auto-generated
}

# Check script-generated files (these are allowed to have uncommitted changes)
echo "Checking script-generated metadata files..."
for file in "${SCRIPT_GENERATED_FILES[@]}"; do
    if [ -f "$file" ] && ! git diff --quiet HEAD -- "$file" 2>/dev/null; then
        if is_likely_autogenerated "$file"; then
            echo -e "${BLUE}‚ÑπÔ∏è  Auto-generated changes detected: $file${NC}"
            echo "  These appear to be legitimate auto-generated updates."
            WARNINGS_FOUND=true
        else
            echo -e "${YELLOW}‚ö†Ô∏è  Uncommitted changes in: $file${NC}"
            echo "  Please verify these are from running build scripts, not manual edits."
            WARNINGS_FOUND=true
        fi
    fi
done

# Check content-generated files (should match source-documents)
echo "Checking content-synced files..."
for file in "${CONTENT_GENERATED_FILES[@]}"; do
    if [ -f "$file" ] && ! git diff --quiet HEAD -- "$file" 2>/dev/null; then
        echo -e "${RED}‚úó Direct modification detected: $file${NC}"
        echo "  This file is auto-generated. Edit the source files instead."
        ISSUES_FOUND=true
    fi
done

# Check for uncommitted changes in generated directories
for dir in "${GENERATED_DIRS[@]}"; do
    if [ -d "$dir" ]; then
        # Check if there are any modified files in this directory
        if ! git diff --quiet HEAD -- "$dir" 2>/dev/null; then
            modified_files=$(git diff --name-only HEAD -- "$dir" 2>/dev/null)
            if [ -n "$modified_files" ]; then
                # Check if corresponding source files were also modified
                has_manual_edits=false
                for mod_file in $modified_files; do
                    # Convert src path to source-documents path
                    source_file=$(echo "$mod_file" | sed 's|^src/|source-documents/|')

                    # If source file doesn't exist or wasn't modified, this is likely a manual edit
                    if [ ! -f "$source_file" ] || git diff --quiet HEAD -- "$source_file" 2>/dev/null; then
                        has_manual_edits=true
                        break
                    fi
                done

                if [ "$has_manual_edits" = true ]; then
                    echo -e "${RED}‚úó Direct modifications in $dir:${NC}"
                    echo "$modified_files" | sed 's/^/    /'
                    echo "  These files are auto-generated from source-documents/"
                    echo "  Edit the original files in source-documents/ instead."
                    ISSUES_FOUND=true
                else
                    echo -e "${BLUE}‚ÑπÔ∏è  Synced changes in $dir (from source-documents)${NC}"
                fi
            fi
        fi

        # Check for untracked files (new files added directly to /src)
        untracked=$(git ls-files --others --exclude-standard "$dir" 2>/dev/null)
        if [ -n "$untracked" ]; then
            echo -e "${YELLOW}‚ö†Ô∏è  New untracked files in $dir:${NC}"
            echo "$untracked" | sed 's/^/    /'
            echo "  If these are meant to be permanent, add them to source-documents/ instead."
            ISSUES_FOUND=true
        fi
    fi
done

# Provide guidance based on findings
if [ "$ISSUES_FOUND" = true ]; then
    echo ""
    echo -e "${RED}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    echo -e "${RED}‚ùå Manual /src modifications detected!${NC}"
    echo ""
    echo "The /src directory contains auto-generated files that are"
    echo "created from source-documents/ by the build scripts."
    echo ""
    echo "To fix this:"
    echo "1. Copy your changes to the corresponding files in source-documents/"
    echo "2. Run: git checkout -- src/"
    echo "3. Run: ./build-all.sh"
    echo ""
    echo "This will regenerate /src from your source documents."
    echo -e "${RED}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    exit 1
elif [ "$WARNINGS_FOUND" = true ]; then
    echo ""
    echo -e "${YELLOW}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    echo -e "${YELLOW}‚ö†Ô∏è  Auto-generated changes detected${NC}"
    echo ""
    echo "Some auto-generated files have uncommitted changes."
    echo "This is normal after running build scripts."
    echo ""
    echo "If these changes are expected:"
    echo "‚Ä¢ Review them with: git diff src/"
    echo "‚Ä¢ Commit them if they're correct"
    echo ""
    echo "If these changes are unexpected:"
    echo "‚Ä¢ Run: git checkout -- src/"
    echo "‚Ä¢ Then run: ./build-all.sh"
    echo -e "${YELLOW}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    # Don't exit with error for warnings
    exit 0
else
    echo -e "${GREEN}‚úÖ No manual /src modifications found${NC}"

    # Check if there are ANY uncommitted src changes (for informational purposes)
    if ! git diff --quiet HEAD -- "src/" 2>/dev/null; then
        echo -e "${BLUE}‚ÑπÔ∏è  Note: There are uncommitted changes in src/ (appears to be auto-generated)${NC}"
    fi
fi