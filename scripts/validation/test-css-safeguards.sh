#!/bin/bash
# Test that safeguards prevent editing CSS in book/ directory

set -e

echo "üß™ Testing CSS Edit Safeguards"
echo "=============================="
echo ""

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

TESTS_PASSED=0
TESTS_FAILED=0

# Test 1: Check if book/ is in .gitignore
echo "Test 1: Checking .gitignore..."
if grep -q "^book" .gitignore; then
    echo -e "  ${GREEN}‚úì book/ is in .gitignore${NC}"
    ((TESTS_PASSED++))
else
    echo -e "  ${RED}‚úó book/ is NOT in .gitignore${NC}"
    ((TESTS_FAILED++))
fi
echo ""

# Test 2: Check for warning headers in CSS files
echo "Test 2: Checking for warning headers in generated CSS..."
if [ -f "book/theme/css/main.css" ]; then
    if grep -q "WARNING: DO NOT EDIT THIS FILE!" "book/theme/css/main.css"; then
        echo -e "  ${GREEN}‚úì Warning header found in book/theme/css/main.css${NC}"
        ((TESTS_PASSED++))
    else
        echo -e "  ${YELLOW}‚ö† No warning header in book/theme/css/main.css${NC}"
        echo "    Run: ./scripts/build/add-readonly-warnings.sh"
        ((TESTS_FAILED++))
    fi
else
    echo -e "  ${YELLOW}‚ö† book/theme/css/main.css not found (run build first)${NC}"
fi
echo ""

# Test 3: Check if pre-commit hook is installed
echo "Test 3: Checking pre-commit hook..."
if [ -f ".git/hooks/pre-commit" ]; then
    if grep -q "check-book-edits" ".git/hooks/pre-commit"; then
        echo -e "  ${GREEN}‚úì Pre-commit hook is installed${NC}"
        ((TESTS_PASSED++))
    else
        echo -e "  ${YELLOW}‚ö† Pre-commit hook exists but doesn't check book/edits${NC}"
        echo "    Run: ./scripts/hooks/install-hooks.sh"
        ((TESTS_FAILED++))
    fi
else
    echo -e "  ${YELLOW}‚ö† No pre-commit hook installed${NC}"
    echo "    Run: ./scripts/hooks/install-hooks.sh"
    ((TESTS_FAILED++))
fi
echo ""

# Test 4: Test the pre-commit hook (dry run)
echo "Test 4: Testing pre-commit hook (dry run)..."
if [ -f "scripts/hooks/pre-commit-check-book-edits.sh" ]; then
    # Create a test scenario
    TEST_FILE="book/test-css-safeguard.css"
    echo "/* test file */" > "$TEST_FILE" 2>/dev/null || true
    
    # Try to stage it
    git add "$TEST_FILE" 2>/dev/null || true
    
    # Run the hook
    if ./scripts/hooks/pre-commit-check-book-edits.sh 2>/dev/null; then
        echo -e "  ${RED}‚úó Hook should have prevented staging book/ files${NC}"
        ((TESTS_FAILED++))
    else
        echo -e "  ${GREEN}‚úì Hook correctly prevents staging book/ files${NC}"
        ((TESTS_PASSED++))
    fi
    
    # Clean up
    git reset HEAD "$TEST_FILE" 2>/dev/null || true
    rm -f "$TEST_FILE" 2>/dev/null || true
else
    echo -e "  ${RED}‚úó Pre-commit hook script not found${NC}"
    ((TESTS_FAILED++))
fi
echo ""

# Test 5: Check VS Code settings
echo "Test 5: Checking VS Code settings..."
if [ -f ".vscode/settings.json" ]; then
    if grep -q '"book/\*\*"' .vscode/settings.json; then
        echo -e "  ${GREEN}‚úì VS Code configured to exclude book/ from search${NC}"
        ((TESTS_PASSED++))
    else
        echo -e "  ${YELLOW}‚ö† VS Code not configured to handle book/ specially${NC}"
        ((TESTS_FAILED++))
    fi
else
    echo -e "  ${YELLOW}‚ö† No VS Code settings file${NC}"
fi
echo ""

# Test 6: Check build script adds warnings
echo "Test 6: Checking if build script adds warnings..."
if grep -q "add-readonly-warnings.sh" build-all.sh; then
    echo -e "  ${GREEN}‚úì Build script adds warning headers${NC}"
    ((TESTS_PASSED++))
else
    echo -e "  ${YELLOW}‚ö† Build script doesn't add warning headers${NC}"
    ((TESTS_FAILED++))
fi
echo ""

# Summary
echo "=============================="
echo "Test Results:"
echo -e "  ${GREEN}Passed: $TESTS_PASSED${NC}"
if [ $TESTS_FAILED -gt 0 ]; then
    echo -e "  ${RED}Failed: $TESTS_FAILED${NC}"
else
    echo -e "  ${GREEN}Failed: 0${NC}"
fi
echo ""

if [ $TESTS_FAILED -eq 0 ]; then
    echo -e "${GREEN}‚úÖ All safeguards are in place!${NC}"
    echo ""
    echo "The following protections are active:"
    echo "  ‚Ä¢ book/ is excluded from git"
    echo "  ‚Ä¢ Generated files have warning headers"
    echo "  ‚Ä¢ Pre-commit hook prevents accidental commits"
    echo "  ‚Ä¢ VS Code shows warnings for book/ files"
    exit 0
else
    echo -e "${YELLOW}‚ö†Ô∏è  Some safeguards are missing${NC}"
    echo ""
    echo "To fix:"
    echo "  1. Run: ./scripts/hooks/install-hooks.sh"
    echo "  2. Run: ./build-all.sh (to add warning headers)"
    echo "  3. Restart VS Code to load new settings"
    exit 1
fi